eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://discovery-service:8070/eureka/

management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

server.port=8081
spring.datasource.url=jdbc:postgresql://product-service-postgres:5432/ProductServiceDB
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml

keycloak.uri=http://musicshop-keycloak:8080/auth
keycloak.realm=project-realm
keycloak.clientId=hello
jwt.auth.converter.principle-attribute=preferred_username
jwt.auth.converter.resource-id=${keycloak.clientId}
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.uri}/realms/${keycloak.realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

spring.kafka.producer.bootstrap-servers=musicshop-kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=InventoryChangeDto:by.innowise.productservice.dto.InventoryChangeDto
spring.kafka.producer.transaction-id-prefix=tx-
topic.inventory-change=inventory-change-topic

management.zipkin.tracing.endpoint=http://musicshop-zipkin:9411/api/v2/spans
management.tracing.sampling.probability=1.0