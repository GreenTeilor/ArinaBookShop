name: bookshop-services
services:
  bookshop-zookeeper:
    image: wurstmeister/zookeeper
    container_name: bookshop-zookeeper
    ports:
      - "2181:2181"
  bookshop-kafka:
    image: wurstmeister/kafka
    container_name: bookshop-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://bookshop-kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: bookshop-zookeeper:2181
    depends_on:
      - bookshop-zookeeper
  bookshop-kafka-ui:
    image: provectuslabs/kafka-ui:v0.6.1
    depends_on:
      - bookshop-kafka
    ports:
      - "19092:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=bookshop-kafka:9093
  bookshop-keycloak:
    container_name: bookshop-keycloak
    image: quay.io/keycloak/keycloak:6.0.1
    depends_on:
      - bookshop-keycloak-postgres
    environment:
      KEYCLOAK_VERSION: 6.0.1
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: 123
      #      For newer keycloak versions
      #      KC_DB: postgres
      #      KC_DB_SCHEMA: public
      #      KC_DB_URL_HOST: keycloak-postgres
      #      KC_DB_URL_DATABASE: mobiles_sneakers_shop
      #      KC_DB_USERNAME: postgres
      #      KC_DB_PASSWORD: postgres
      #      KC_DB_URL_PORT: 5433
      DB_VENDOR: postgres
      DB_ADDR: bookshop-keycloak-postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
      DB_SCHEMA: public
      DB_DATABASE: keycloak
    ports:
      - "9091:8080"
  bookshop-keycloak-postgres:
    container_name: bookshop-keycloak-postgres
    image: postgres:13.3
    environment:
      POSTGRES_DB: "keycloak"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - sneakers-shop-api_keycloak-postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  bookshop-redis:
    image: redis:alpine
    container_name: bookshop-redis
    ports:
      - "6379:6379"
  bookshop-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: bookshop-elasticsearch
    environment:
      - node.name=bookshop-elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      backend:
        aliases:
          - "elasticsearch"
      default:
  bookshop-kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: bookshop-kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
      - 5601:5601
    networks:
      backend:
        aliases:
          - "kibana"
      default:
  bookshop-logstash:
    image: docker.elastic.co/logstash/logstash:7.7.0
    container_name: bookshop-logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./config:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    networks:
      backend:
        aliases:
          - "logstash"
      default:
  bookshop-zipkin:
    image: openzipkin/zipkin
    container_name: bookshop-zipkin
    depends_on:
      - bookshop-elasticsearch
    environment:
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=bookshop-elasticsearch:9300"
    ports:
      - "9411:9411"
volumes:
  sneakers-shop-api_keycloak-postgres-data: #Here sheakers-shop-api, cause I just used existing volume
    external: true                          #with keycloak setup I created beforeXD
  esdata:
    driver: local
networks:
  backend:
    driver: bridge